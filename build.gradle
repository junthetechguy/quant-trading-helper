plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.1.5'
	id "com.github.node-gradle.node" version "3.3.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.vladmihalcea:hibernate-types-52:2.17.3'

	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	nodeProjectDir = file("$projectDir/front-end")
}


task npmBuild(type: NpmTask) {
	args = ['run', "build"]
}

task copyFrontEnd(type: Copy) {
	from "$projectDir/front-end/build"
	into 'build/resources/main/static/.'
}

task cleanFrontEnd(type: Delete) {
	delete "$projectDir/front-end/static"
}

copyFrontEnd.dependsOn npmBuild
compileJava.dependsOn copyFrontEnd

clean.dependsOn cleanFrontEnd
